<script>
  (function () {
    if (typeof window.aaron == "undefined")
      window.aaron = new Object();
    if (typeof window.aaron.cart == "undefined")
      window.aaron.cart = new Object();
    if (typeof window.aaron.cart.cartmodule == "undefined")
      window.aaron.cart.cartmodule = new Object();
    window.aaron.cart.cartmodule.cart = [];
    if (typeof window.aaron.cart.cartmodule.stocks == "undefined")
      window.aaron.cart.cartmodule.stocks = new Object();
  })();

  if (((deviceType == "pc" || deviceType == "tablet") && '{{ block.settings.pcimg }}' != "")
      || (deviceType == "phone" && '{{ block.settings.phoneimg }}' != "")) {
    //Hoist funcs
    let Startup, AddElems, Activate, Resize;
    //Hoist vars
    let div,backplatediv,backplateimg,productsdiv;
    
    Startup = function () {
      {% for line_item in cart.items %}
        for (let i = 0;i < 1;i++) {
          window.aaron.cart.cartmodule.cart.push({{ line_item | json }});
        }
        window.aaron.cart.cartmodule.stocks["{{ line_item.variant_id }}"] = {{ line_item.variant.inventory_quantity }};
      {% endfor %}
    };
    AddElems = function () {
      div = document.createElement("div");
      div.classList.add("cartmodule");
      div.style.position = "absolute";
      div.style.visibility = "hidden";
      div.dataset.pcrowheight = "100";
      div.dataset.phonerowheight = "50";

      backplatediv = document.createElement("div");
      backplatediv.style.position = "absolute";
      backplatediv.style.margin = "0px";
      backplatediv.style.transform = "translate(-50%,-50%)";
      backplatediv.style.zIndex = {{ block.settings.zindex }};
      backplatediv.dataset.anchor='{{ block.settings.anchor }}';
      backplatediv.dataset.pcsizingmode='{{ block.settings.pcsizingmode }}';
      backplatediv.dataset.pcsizewidth='{{ block.settings.pcsizewidth }}';
      backplatediv.dataset.pcsizeheight='{{ block.settings.pcsizeheight }}';
      backplatediv.dataset.pcx='{{ block.settings.pcx }}';
      backplatediv.dataset.pcy='{{ block.settings.pcy }}';
      backplatediv.dataset.phonesizingmode='{{ block.settings.phonesizingmode }}';
      backplatediv.dataset.phonesizewidth='{{ block.settings.phonesizewidth }}';
      backplatediv.dataset.phonesizeheight='{{ block.settings.phonesizeheight }}';
      backplatediv.dataset.phonex='{{ block.settings.phonex }}';
      backplatediv.dataset.phoney='{{ block.settings.phoney }}';
      
      backplateimg = document.createElement("img");
      backplateimg.id = "{{ block.settings.id }}";
      if (deviceType == "pc" || deviceType == "tablet")
        backplateimg.src = '{{ block.settings.pcimg | image_url }}?width={{ block.settings.pcapproxsize }}'
      else if (deviceType == "phone")
        backplateimg.src = '{{ block.settings.phoneimg | image_url }}?width={{ block.settings.phoneapproxsize }}'
      backplateimg.ondragstart = function () {
        return false;
      }
      backplateimg.onload = Resize;

      productsdiv = document.createElement("div");
      productsdiv.id = '{{ block.settings.scrollid }}';
      productsdiv.style.position = "absolute";
      productsdiv.style.zIndex = {{ block.settings.zindex }};
      productsdiv.style.display = "grid";
      if (window.aaron.cart.cartmodule.cart.length != 0) {
        if (deviceType == "pc" || deviceType == "tablet") {
          productsdiv.style.gridTemplateRows = "50px repeat(" + window.aaron.cart.cartmodule.cart.length + "," + div.dataset.pcrowheight + "px)";
        } else {
          productsdiv.style.gridTemplateRows = "50px repeat(" + window.aaron.cart.cartmodule.cart.length + "," + div.dataset.phonerowheight + "px)";
        }
      } else {
        productsdiv.style.gridTemplateRows = "50px";
      }
      productsdiv.style.gridTemplateColumns = "17% 1fr 16% 16% 16%";
      productsdiv.style.rowGap = "10px";
      productsdiv.style.overflow = "hidden";
      productsdiv.style.justifyItems = "center";
      productsdiv.style.alignItems = "center";
      let product = document.createElement("p");
      product.innerText = "Product";
      productsdiv.appendChild(product);
      let gap = document.createElement("p");
      productsdiv.appendChild(gap);
      let price = document.createElement("p");
      price.innerText = "Price";
      productsdiv.appendChild(price);
      let quantity = document.createElement("p");
      quantity.innerText = "Quantity";
      productsdiv.appendChild(quantity);
      let total = document.createElement("p");
      total.innerText = "Total";
      productsdiv.appendChild(total);
      // //Define scroll functions
      // productsdiv.onwheel = function (event) {
      //   if (event.deltaY == 0)
      //     return;

      //   let delta = event.deltaY > 0 ? 100 : -100;
      //   productsdiv.scroll({
      //     top: productsdiv.scrollTop + delta,
      //     left: 0,
      //     behavior: 'smooth'
      //   });
      // };
      // let touchY = 0;
      // let startScroll = 0;
      // productsdiv.ontouchstart = function (event) {
      //   touchY = event.touches[0].pageY;
      //   startScroll = productsdiv.scrollTop;
      // }
      // productsdiv.ontouchmove = function (event) {
      //   deltaY = - (event.touches[0].pageY - touchY);
      //   productsdiv.scroll({
      //     top: startScroll + deltaY,
      //     left: 0,
      //     behavior: 'instant'
      //   });
      // }
      for (let lineitem of window.aaron.cart.cartmodule.cart) {
        let productimg = document.createElement("img");
        productimg.src = lineitem.image + "&width=256";
        productimg.style.position = "relative";
        if (deviceType == "pc" || deviceType == "tablet") {
          productimg.style.height = "100%";
          productimg.style.width = "auto";
        } else {
          productimg.style.height = "auto";
          productimg.style.width = "100%";
        }
        productimg.ondragstart = function () {
          return false;
        }
        let gapinfodiv = document.createElement("div");
        gapinfodiv.style.justifySelf = "left";
        let titlep = document.createElement("p");
        titlep.innerText = lineitem.product_title;
        let optionsp = document.createElement("p");
        let optionsStr = "";
        for (let optionwval of lineitem.options_with_values) {
          optionsStr = optionsStr + optionwval.name + ": " + optionwval.value + "\n";
        }
        optionsStr = optionsStr.substring(0,optionsStr.length-1);
        optionsp.innerText = optionsStr;
        gapinfodiv.appendChild(titlep);
        gapinfodiv.appendChild(optionsp);
        let pricep = document.createElement("p");
        pricep.innerText = "$" + (lineitem.final_price/100);
        let quantityinput = document.createElement("input");
        quantityinput.type = "number";
        quantityinput.value = lineitem.quantity;
        quantityinput.dataset.quantity = lineitem.quantity + "";
        quantityinput.min = 0;
        quantityinput.max = window.aaron.cart.cartmodule.stocks[lineitem.variant_id];
        quantityinput.maxLength = 2;
        quantityinput.size = 2;
        quantityinput.style.border = "none";
        quantityinput.style.padding = "0px";
        // quantityinput.style.maxWidth = "15px";
        quantityinput.style.background = "none";
        quantityinput.style.color = "white";
        quantityinput.dataset.lineitemkey = lineitem.key;
        quantityinput.addEventListener('change',()=>{
          let checkouttext = document.getElementById("checkout");
          let quantityMismatch = false;
          let elemArray = productsdiv.getElementsByTagName("input");
          for (let i = 0;i < elemArray.length;i++) {
            if (elemArray[i].value != window.aaron.cart.cartmodule.cart[i].quantity) {
              quantityMismatch = true;
              i = elemArray.length;
            }
          }
          if (quantityMismatch) {
            checkouttext.value = "Update Cart";
          } else {
            checkouttext.value = "Checkout";
          }
        });
        let fullpricep = document.createElement("p");
        fullpricep.innerText = "$" + (lineitem.final_line_price/100);

        productsdiv.appendChild(productimg);
        productsdiv.appendChild(gapinfodiv);
        productsdiv.appendChild(pricep);
        productsdiv.appendChild(quantityinput);
        productsdiv.appendChild(fullpricep);
      }
  
      let root = document.getElementById("root");
      backplatediv.appendChild(backplateimg);
      div.appendChild(backplatediv);
      div.appendChild(productsdiv);
      root.appendChild(div);

      if (window != null && window.aaron != null && window.aaron.common != null && window.aaron.common.scrollbar != null && window.aaron.common.scrollbar.pending != null) {
        let scrollID = '{{ block.settings.scrollid }}';
        if (typeof window.aaron.common.scrollbar.pending[scrollID] != "undefined") {
          window.aaron.common.scrollbar.pending[scrollID]();
          delete window.aaron.common.scrollbar.pending[scrollID];
        }
      }
    };
    Activate = function () {
      //No Activate
    };
    Resize = function () {
      div.style.visibility = "visible";
      window.aaron.common.sizing.DefaultSetSize(backplatediv, backplateimg, false);
      backplateimg.style.width = backplatediv.style.width;
      backplateimg.style.height = backplatediv.style.height;
      if (window.aaron && window.aaron.common && window.aaron.common.resizetextarea && window.aaron.common.resizetextarea.pendingTextareas && window.aaron.common.resizetextarea.pendingTextareas[backplateimg.id]) {
        let imgMeasurement = backplateimg.getBoundingClientRect();
        for (let f of window.aaron.common.resizetextarea.pendingTextareas[backplateimg.id])
          f(imgMeasurement.left, imgMeasurement.top);
      }
      function doStuff (backplateimgLeft, backplateimgTop) {
        let originalTotalWidth = backplateimg.naturalWidth;
        let originalTotalHeight = backplateimg.naturalHeight;
        let originalTopLeft, originalBottomRight;
        if (deviceType == "pc" || deviceType == "tablet") {
          originalTopLeft = [{{ block.settings.pctopleftx }}, {{ block.settings.pctoplefty }}];
          originalBottomRight = [{{ block.settings.pcbottomrightx }}, {{ block.settings.pcbottomrighty }}];
        } else if (deviceType == "phone") {
          originalTopLeft = [{{ block.settings.phonetopleftx }}, {{ block.settings.phonetoplefty }}];
          originalBottomRight = [{{ block.settings.phonebottomrightx }}, {{ block.settings.phonebottomrighty }}];
        }
        let widthRatio = parseInt(backplatediv.style.width) / originalTotalWidth;
        let heightRatio = parseInt(backplatediv.style.height) / originalTotalHeight;
        let resizedTopLeft = [originalTopLeft[0]*widthRatio, originalTopLeft[1]*heightRatio];
        let resizedBottomRight = [originalBottomRight[0]*widthRatio, originalBottomRight[1]*heightRatio];
        let height = (resizedBottomRight[1] - resizedTopLeft[1]);
        productsdiv.style.left = (backplateimgLeft + resizedTopLeft[0]) + "px";
        productsdiv.style.top = (backplateimgTop + resizedTopLeft[1]) + "px";
        productsdiv.style.width = (resizedBottomRight[0] - resizedTopLeft[0]) + "px";
        productsdiv.style.height = height + "px";
        let tempFontHeightCalc = deviceType == "pc" || deviceType == "tablet" ? div.dataset.pcrowheight * {{ block.settings.pcfontsize }}/100 : div.dataset.phonerowheight * {{ block.settings.phonefontsize }}/100;
        productsdiv.style.fontSize = tempFontHeightCalc + "px";
        for (let childInd = 0;childInd < productsdiv.childNodes.length;childInd++) {
          // if (childInd < 5)
          //   continue;
          let elem = productsdiv.childNodes[childInd];
          elem.style.fontSize = tempFontHeightCalc + "px";
        }
        for (let inputElem of productsdiv.getElementsByTagName("input")) {
          inputElem.style.maxWidth = (.05 * parseInt(productsdiv.style.width)) + "px";
        }
        //Handle common.scrollbar if applicable
        if (window != null && window.aaron != null && window.aaron.common != null && window.aaron.common.scrollbar != null && window.aaron.common.scrollbar.resizefuncs != null) {
          let scrollID = '{{ block.settings.scrollid }}';
          if (typeof window.aaron.common.scrollbar.resizefuncs[scrollID] != "undefined") {
            window.aaron.common.scrollbar.resizefuncs[scrollID]();
          }
        }
      }
      if (backplateimg == null || backplateimg.naturalWidth == 0 || backplateimg.getBoundingClientRect().left < 0) {
        //Do nothing bc backplate hasn't loaded
      } else {
        let backplateimgMeasurement = backplateimg.getBoundingClientRect();
        doStuff(backplateimgMeasurement.left, backplateimgMeasurement.top);
      }
    };
    window.aaron.common.modulebasics.StartupFuncs.push(Startup);
    window.aaron.common.modulebasics.AddElemsFuncs.push(AddElems);
    // window.aaron.common.modulebasics.ActivateFuncs.push(Activate);
    window.aaron.common.modulebasics.ResizeFuncs.push(Resize);
  }
</script>